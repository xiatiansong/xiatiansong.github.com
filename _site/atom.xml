<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>天松的个人博客</title>
  <link href="//atom.xml" rel="self"/>
  <link href=""/>
  <updated>2015-01-17T14:57:57+08:00</updated>
  <id></id>
  <author>
    <name>天松</name>
  </author>

  
  <entry>
    <title>Django中的模型</title>
    <link href="/2015/01/14/django-model"/>
    <updated>2015-01-14T00:00:00+08:00</updated>
    <id>/2015/01/14/django-model</id>
    <content type="html">通过《如何创建一个Django网站》大概清楚了如何创建一个简单的 Django 网站，这篇文章主要是在此基础上介绍 Django 中模型的定义方法以及模型之间存在的几种映射关系。

模型的定义


Django 中每一个 Model 都继承自 django.db.models.Model。
在 Model 当中每一个属性 attribute 都代表一个数据库字段。
通过 Django Model API 可以执行数据库的增删改查, 而不需要写一些数据库的查询语句。


在 如何创建一个Django网站 中创建的 List 模型定义如下：
from django.db import mod...</content>
  </entry>
  
  <entry>
    <title>AngularJS PhoneCat代码分析</title>
    <link href="/2015/01/09/angular-phonecat-examples"/>
    <updated>2015-01-09T00:00:00+08:00</updated>
    <id>/2015/01/09/angular-phonecat-examples</id>
    <content type="html">AngularJS 官方网站提供了一个用于学习的示例项目：PhoneCat。这是一个Web应用，用户可以浏览一些Android手机，了解它们的详细信息，并进行搜索和排序操作。

本文主要分析 AngularJS 官方网站提供的一个用于学习的示例项目 PhoneCat 的构建、测试过程以及代码的运行原理。希望能够对 PhoneCat 项目有一个更加深入全面的认识。这其中包括以下内容：


该项目如何运行起来的
该项目如何进行前端单元测试
AngularJS 相关代码分析


以下内容如有理解不正确，欢迎指正！

环境搭建

对于 PhoneCat 项目的开发环境和测试环境的搭建，官方网站上...</content>
  </entry>
  
  <entry>
    <title>AngularJS基本知识点</title>
    <link href="/2015/01/08/basic-concepts-of-angularjs"/>
    <updated>2015-01-08T00:00:00+08:00</updated>
    <id>/2015/01/08/basic-concepts-of-angularjs</id>
    <content type="html">AngularJS 是一个 MV* 框架，最适于开发客户端的单页面应用。它不是个功能库，而是用来开发动态网页的框架。它专注于扩展 HTML 的功能，提供动态数据绑定（data binding），而且它能跟其它框架（如 JQuery 等）合作融洽。

1. 一个简单示例

通过下面的示例代码，可以运行一个简单的 AngularJS 应用：
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;

&amp;lt;div ng-app=&amp;quot;&amp;quot;&amp;gt;
  &amp;lt;p&amp;gt;在输入框中尝试输入：&amp;lt;/p&amp;gt;
  &amp;lt;p&amp;gt;姓名：...</content>
  </entry>
  
  <entry>
    <title>Gradle构建多模块项目</title>
    <link href="/2015/01/07/build-multi-module-project-with-gradle"/>
    <updated>2015-01-07T00:00:00+08:00</updated>
    <id>/2015/01/07/build-multi-module-project-with-gradle</id>
    <content type="html">废话不多说，直接进入主题。

创建项目

首先创建项目，名称为 test：
mkdir test &amp;amp;&amp;amp; cd test
gradle init

这时候的项目结构如下：
➜  test  tree
.
├── build.gradle
├── gradle
│   └── wrapper
│       ├── gradle-wrapper.jar
│       └── gradle-wrapper.properties
├── gradlew
├── gradlew.bat
└── settings.gradle

2 directories, 6 files

然后...</content>
  </entry>
  
  <entry>
    <title>使用Spring Boot和Gradle创建项目</title>
    <link href="/2015/01/06/build-app-with-spring-boot-and-gradle"/>
    <updated>2015-01-06T00:00:00+08:00</updated>
    <id>/2015/01/06/build-app-with-spring-boot-and-gradle</id>
    <content type="html">Spring Boot 是由 Pivotal 团队提供的全新框架，其设计目的是用来简化新 Spring 应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。

本文主要是记录使用 Spring Boot 和 Gradle 创建项目的过程，其中会包括 Spring Boot 的安装及使用方法，希望通过这篇文章能够快速搭建一个项目。

开发环境


操作系统: mac
JDK：1.7.0_60
Gradle：2.2.1


创建项目

你可以通过 Spring Initializr 来创建一个空的项目，也可以手动创建，这里我使用的是手动创建 ...</content>
  </entry>
  
</feed>
